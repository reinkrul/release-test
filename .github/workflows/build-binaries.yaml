---
name: 'Build Native Binaries'

on:
  release:
    types: [released]

# cancel build action if superseded by new commit on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ 'amd64', 'arm64' ]
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version params
        id: version
        shell: bash
        run: |
          echo "git_commit=$(echo ${GITHUB_SHA})" >> $GITHUB_OUTPUT
          echo "git_branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "git_version=$(git name-rev --tags --name-only $(git rev-parse HEAD))" >> $GITHUB_OUTPUT

      - name: Print version params
        run: |
          echo "Commit: ${{ steps.version.outputs.git_commit }}"
          echo "Branch: ${{ steps.version.outputs.git_branch }}"
          echo "Version: ${{ steps.version.outputs.git_version }}"
          echo "This tag: ${{ github.event.tag_name }}"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: |
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o test-linux-${{ matrix.arch }} -o test-linux-${{ matrix.arch }}
      - name:  Upload binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.tag_name }} test-linux-${{ matrix.arch }}
          
